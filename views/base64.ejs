<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Base64 Encode & Decode</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 40px;
      background-color: #f8f9fa;
    }
    .container {
      max-width: 800px;
      margin: auto;
      background: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    h1, h2 {
      color: #333;
      margin-bottom: 20px;
    }
    textarea {
      width: 100%;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: 6px;
      font-family: monospace;
      resize: vertical;
    }
    button {
      margin-top: 10px;
      padding: 10px 16px;
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }
    button:hover {
      background-color: #0056b3;
    }
    .error {
      color: red;
      margin-bottom: 10px;
    }
    .result {
      margin-top: 20px;
      background: #f1f1f1;
      padding: 12px;
      border-radius: 6px;
      font-family: monospace;
      white-space: pre-wrap;
    }
    .section {
      margin-top: 40px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Base64 Encode & Decode</h1>

    <!-- Decode Section -->
    <div class="section">
      <h2>Decode Base64</h2>
      <form method="POST" action="/decode-base64">
        <% if (errorMessage) { %>
          <div class="error"><%= errorMessage %></div>
        <% } %>
        <textarea name="encodedData" rows="6" placeholder="Paste Base64 string to decode..."><%= sampleEncoded %></textarea>
        <button type="submit">Decode</button>

        <% if (decodedData) { %>
          <div class="result"><%= decodedData %></div>
        <% } %>
      </form>
    </div>

    <!-- Encode Section -->
    <div class="section">
      <h2>Encode to Base64</h2>
      <form method="POST" action="/encode-base64">
        <% if (encodeError) { %>
          <div class="error"><%= encodeError %></div>
        <% } %>
        <textarea name="encodeInput" rows="6" placeholder="Enter plain text to encode..."><%= encodeInput %></textarea>
        <button type="submit">Encode</button>

        <% if (encodedResult) { %>
          <div class="result"><%= encodedResult %></div>
        <% } %>
      </form>
    </div>

    <!-- Technical Details (at bottom) -->
    <div class="section">
      <div class="mt-8 p-4 bg-gray-100 rounded-lg shadow">
        <h3 class="text-lg font-semibold text-blue-600">Technical Insights into Base64 Encoding</h3>
        <p class="mt-2 text-gray-700">
          Base64 encoding is a widely-used mechanism to represent binary data in an ASCII string format. Here are key technical aspects of this process:
        </p>
        <ul class="list-disc list-inside mt-2 text-gray-700">
          <li><strong>Character Set:</strong> Utilizes 64 characters (A-Z, a-z, 0-9, '+', '/'), with '=' for padding.</li>
          <li><strong>Encoding Process:</strong> Converts binary data into Base64 by processing 3-byte chunks into 4-character sequences.</li>
          <li><strong>Binary to ASCII Conversion:</strong> Groups of six bits are mapped to characters.</li>
          <li><strong>Padding:</strong> '=' fills incomplete byte groups.</li>
          <li><strong>Applications:</strong> Used in email, JSON, and data URLs.</li>
        </ul>
        <p class="mt-4 text-gray-700">
          Understanding these details is vital for developers working with web data, files, and APIs.
        </p>
      </div>

      <div class="mt-8 p-4 bg-gray-100 rounded-lg shadow">
        <h3 class="text-lg font-semibold text-blue-600">Technical Insights into Base64 Decoding</h3>
        <p class="mt-2 text-gray-700">
          Base64 decoding reverses the encoding process, transforming Base64 characters back to their original binary or text form.
        </p>
        <ul class="list-disc list-inside mt-2 text-gray-700">
          <li><strong>Character Set:</strong> 64 characters (A-Z, a-z, 0-9, '+', '/') and '=' padding.</li>
          <li><strong>Decoding Process:</strong> Each 4-character group converts into 3 bytes of binary data.</li>
          <li><strong>Padding Handling:</strong> '=' characters are used for alignment and ignored when decoding.</li>
          <li><strong>Conversion Mechanism:</strong> 6-bit groups are recombined into bytes.</li>
          <li><strong>Applications:</strong> Used in APIs, email attachments, and secure data transport.</li>
        </ul>
        <p class="mt-4 text-gray-700">
          This knowledge helps developers safely and efficiently reverse Base64 transformations.
        </p>
      </div>
    </div>
  </div>
</body>
</html>
